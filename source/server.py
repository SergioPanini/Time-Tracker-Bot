import logging
import os
import typing

from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import reply_keyboard
from aiogram.types.message import Message
from messages import START_MESSAGE

from db import add_user, add_activity, get_user_activities
from services import get_activities_keyboard, get_main_keyboard


TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
logging.basicConfig(level=logging.INFO)

bot = Bot(TELEGRAM_BOT_TOKEN)
dp = Dispatcher(bot)

set_activety_user_dict = {}


@dp.message_handler(commands=['start', 'help'])
async def send_walcome(message: types.Message):
    '''–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é'''

    add_user(message.chat.id)

    user_activities = get_user_activities(message.chat.id)
    print('–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ', user_activities)
    start_keyboard = get_activities_keyboard(message.chat.id)
    static_keyboard = get_main_keyboard()

    await message.answer('üñêüèª', reply_markup=static_keyboard)
    await message.answer(START_MESSAGE, reply_markup=start_keyboard)


@dp.message_handler(commands=['console'])
async def show_main_console(message: types.Message):
    '''–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–æ–Ω—Å–æ–ª—å'''
    await message.answer(text='–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–µ–º', reply_markup=get_activities_keyboard(message.chat.id))

@dp.callback_query_handler()
async def activety_select(callback_query: types.CallbackQuery):
    '''Callback –Ω–∞ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏'''

    if callback_query.data == "Add_new_activities":
        await bot.send_message(chat_id=callback_query.message.chat.id, text='–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏')

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–ª–∞–≥, —á—Ç–æ —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        set_activety_user_dict[callback_query.message.chat.id] = True


@dp.message_handler()
async def set_activety(message: types.Message):
    '''–ó–∞–ø–∏—Å—å –Ω–æ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–¥'''

    if set_activety_user_dict.get(message.chat.id) == True:
        set_activety_user_dict[message.chat.id] = False
        await message.answer(text='–ó–∞–ø–æ–º–Ω–∏–ª %s' % message.text)

        add_activity(chat_id=message.chat.id, activity=message.text)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
